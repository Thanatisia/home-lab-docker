version: "3"

networks:
    default:

volumes:
  # Named mounted volume
  ikev2-vpn-data:

services:
    ### NAS File/Media Server
    code-server:
        # Set custom image name
        image: codercom/code-server:latest
        # Set Custom Container Name (same as --name)
        container_name: "code-server"
        # Restart container (same as --restart)
        restart: always
        # Set Volumes to share between host and container (same as -v)
        volumes:
            - "$HOME/.config:/home/coder/.config"
            - "$PWD:/home/coder/project"
        # Expose ports/port forwarding from host system port to container port (same as -p)
        ports:
            # "host system port:container port"
            - 8080:8080
        # Set Environment Variables (same as -e)
        environment:
            - "DOCKER_USER=$USER"
        # Set custom working directory (same as --working-dir)
        # Please change this accordingly
        working_dir: $HOME/Desktop/codebase
        # Set User ID
        # user: "$${id -u}:$${id -g}"

    # Samba File Server
    sambafs:
        # Set custom image name
        # Set Custom Container Name (same as --name)
        container_name: "sambafs"
        # Create docker image using the local Dockerfile build
        build: ./samba
        # Set custom image name
        image: sambafs-debian
        # Restart container (same as --restart)
        restart: unless-stopped
        # Set Network to use
        networks:
            - default
        # Set Volumes to share between host and container (same as -v)
        volumes:
            # "host-system-path:container-path"
            # [Examples]
            # - "$PWD/samba/config/smb.conf:/etc/samba/smb.conf"
            # - "$PWD/samba/config:/etc/samba" # Samba Configuration File
            # - "$PWD/shares:/media/NAS/shares"
            # - "$PWD/shares/public:/media/NAS/shares/public"
            # - "$PWD/shares/home:/media/NAS/shares/homes"
            - "$PWD/samba/config/:/etc/samba"
            - "$PWD/:/mnt/docker/pwd"
        # Expose ports/port forwarding from host system port to container port (same as -p)
        ports:
            - "137:137/udp"
            - "138:138/udp"
            - "139:139/tcp"
            - "445:445/tcp" # For Samba file share
        # Set Environment Variables (same as -e)
        environment:
            TZ: 'Asia/Singapore' # This is the timezone
        tty: true
        command: "service smbd restart"

    jellyfin:
        image: jellyfin/jellyfin
        container_name: jellyfin
        # user: $$(id -u):$$(id -g)
        # user: "${UID}:${GID}"
        network_mode: "host"
        volumes:
            - "$PWD/jellyfin/config:/config"
            - "$PWD/jellyfin/cache:/cache"
            - "$PWD/jellyfin/media:/media"
            - "$PWD/jellyfin/media2:/media2:ro"
        restart: "unless-stopped"
        # environment:
            #Optional - Alternative address used for autodiscovery
            #- JELLYFIN_PublishedServerUrl=http://example.com

    ### Networking Server
    # Pi-hole DNS Server, Resolver, Sinkhole, Firewall, Router
    pihole:
        container_name: pihole
        image: pihole/pihole:latest
        ports:
          - "53:53/tcp"
          - "53:53/udp"
          - "67:67/udp"
          - "80:80/tcp"
          - "443:443/tcp"
        environment:
          TZ: 'Region/City' # This is the timezone; please change this
        volumes:
          - './pihole/etc-pihole/:/etc/pihole/'
          - './pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
        dns:
          - 127.0.0.1
          - 1.1.1.1
          - 192.168.1.123
        cap_add:
          - NET_ADMIN
        restart: always

    vpn:
        # Set image
        image: hwdsl2/ipsec-vpn-server
        restart: always
        env_file:
          - ./ipsec-vpn/vpn.env
        ports:
          - "500:500/udp"
          - "4500:4500/udp"
        privileged: true
        hostname: ipsec-vpn-server
        container_name: ipsec-vpn-server
        volumes:
          - ikev2-vpn-data:/etc/ipsec.d/
          - /lib.modules:/lib/modules:ro

